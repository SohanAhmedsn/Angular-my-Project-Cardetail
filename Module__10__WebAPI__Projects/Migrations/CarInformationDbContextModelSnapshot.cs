// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Module__10__WebAPI__Projects.Models;

#nullable disable

namespace Module__10__WebAPI__Projects.Migrations
{
    [DbContext(typeof(CarInformationDbContext))]
    partial class CarInformationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Module__10__WebAPI__Projects.Models.CarDetail", b =>
                {
                    b.Property<int>("CarDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarDetailId"));

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsStock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LaunchDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("CarDetailId");

                    b.ToTable("CarDetails");
                });

            modelBuilder.Entity("Module__10__WebAPI__Projects.Models.CompanyDetail", b =>
                {
                    b.Property<int>("CompanyDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyDetailId"));

                    b.Property<int>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyInformation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyRank")
                        .HasColumnType("int");

                    b.HasKey("CompanyDetailId");

                    b.HasIndex("CarDetailId");

                    b.ToTable("CompanyDetails");
                });

            modelBuilder.Entity("Module__10__WebAPI__Projects.Models.PartDetail", b =>
                {
                    b.Property<int>("PartDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartDetailId"));

                    b.Property<int>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PartsMFG")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PartsPrice")
                        .HasColumnType("money");

                    b.HasKey("PartDetailId");

                    b.HasIndex("CarDetailId");

                    b.ToTable("PartDetails");
                });

            modelBuilder.Entity("Module__10__WebAPI__Projects.Models.CompanyDetail", b =>
                {
                    b.HasOne("Module__10__WebAPI__Projects.Models.CarDetail", "CarDetail")
                        .WithMany("CompanyDetails")
                        .HasForeignKey("CarDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetail");
                });

            modelBuilder.Entity("Module__10__WebAPI__Projects.Models.PartDetail", b =>
                {
                    b.HasOne("Module__10__WebAPI__Projects.Models.CarDetail", "CarDetail")
                        .WithMany("PartDetails")
                        .HasForeignKey("CarDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetail");
                });

            modelBuilder.Entity("Module__10__WebAPI__Projects.Models.CarDetail", b =>
                {
                    b.Navigation("CompanyDetails");

                    b.Navigation("PartDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
